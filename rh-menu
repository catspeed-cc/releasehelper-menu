#!/bin/bash

# rh-menu.sh - release helper menu

# Determine the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Attempt to source the correct commonlib.sh with fallback
if [[ -f "$SCRIPT_DIR/docker/lib/commonlib.sh" ]]; then
    source "$SCRIPT_DIR/docker/lib/commonlib.sh"
elif [[ -f "$SCRIPT_DIR/../lib/commonlib.sh" ]]; then
    source "$SCRIPT_DIR/../lib/commonlib.sh"
else
    echo "Error: Could not find commonlib.sh in either:" >&2
    echo "  $SCRIPT_DIR/docker/lib/commonlib.sh" >&2
    echo "  $SCRIPT_DIR/../lib/commonlib.sh" >&2
    echo "" >&2
    echo "Critical error: commonlib.sh is only found in these two locations within a valid sd-webui-forge-docker or sd-webui-reforge-docker project" >&2
    echo "if this is a custom/cutdown installation ensure sauces are properly installed" >&2
    echo "please refer to README.md and submit support ticket if issue persists" >&2
    exit 1
fi

# We shall not pass until we get fake docker/ folder with fake fork set up >:)
# I.E. this is exactly the kind of breaking change README.md was warning about :P

echo "#"
echo "##"
echo "## sdf-menu - sdf-docker-menu.sh script initiated"
echo "##"
echo "## Providing menu to user for docker management"
echo "##"
echo "#"

sleep 1
clear
reset

# Navigate to the docker directory
cd "${GIT_ROOT}/docker" || { echo "Failed to enter docker directory"; exit 1; }

# CANNOT OVERRIDE SAUCE_DIR FROM COMMONLIB - USE ELSE
# 
SAUCE_DIR="${GIT_ROOT}/docker/sauce_scripts"

REL_DOCKER_DIR="./docker/sauce_scripts"

# Main menu function
show_menu() {
    clear
    echo "======================================"
    echo "    sd-reforge Release Helper Menu "
    echo "======================================"
    echo
    echo "üì¶ Release Management"
    echo "  1) 'release-build-docker.sh' - docker build / push to dockerhub"
    echo "  2) 'release-gen-sauces.sh' - create sauces archive"
    echo "  3) 'release-gh-push.sh' - git commit / push to github"
    echo
    echo "  Q) Quit"
    echo
    printf " Choose an option: "
}

# Main loop
while true; do
    show_menu
    read -r choice

    case "${choice,,}" in
        "q")
            echo
            echo "Exiting. Goodbye!"
            break
            ;;

        "1")
            echo
            echo "Switch git subtree (development->master, or to other branches for testing)"
            echo "--------------------------------------------------------------------------"
            script_name="release-switch-subtree-branch.sh"
            exit_immediately=true
        
            if command -v "$script_name" &> /dev/null; then
                sleep 1
                if "$script_name"; then
                    echo "‚úÖ Script '$script_name' completed successfully."
                else
                    echo "‚ùå Script '$script_name' failed with exit code: $?"
                fi
            else
                echo "üö´ Error: '$script_name' not found in PATH or not executable."
                echo "üí° Make sure it's installed and in your PATH: which $script_name"
                echo "   Or make it executable: chmod +x $script_name && sudo mv $script_name /usr/local/bin/"
            fi
            
            # Pause unless: script succeeded AND exit_immediately is "true"
            if ! { [[ "$script_succeeded" == "true" ]] && [[ "${exit_immediately:-true}" == "true" ]]; }; then
                read -p "Press Enter to continue..."
            fi
            ;;

        "2")
            echo
            echo "Docker build / push to Docker Hub..."
            echo "------------------------------------"
            script_name="release-build-docker.sh"
            exit_immediately=true
        
            if command -v "$script_name" &> /dev/null; then
                sleep 1
                if "$script_name"; then
                    echo "‚úÖ Script '$script_name' completed successfully."
                else
                    echo "‚ùå Script '$script_name' failed with exit code: $?"
                fi
            else
                echo "üö´ Error: '$script_name' not found in PATH or not executable."
                echo "üí° Make sure it's installed and in your PATH: which $script_name"
                echo "   Or make it executable: chmod +x $script_name && sudo mv $script_name /usr/local/bin/"
            fi
            
            # Pause unless: script succeeded AND exit_immediately is "true"
            if ! { [[ "$script_succeeded" == "true" ]] && [[ "${exit_immediately:-true}" == "true" ]]; }; then
                read -p "Press Enter to continue..."
            fi
            ;;

        "3")
            echo
            echo "Create sauces archive..."
            echo "------------------------"
            script_name="release-gen-sauces.sh"
            exit_immediately=true
        
            if command -v "$script_name" &> /dev/null; then
                sleep 1
                if "$script_name"; then
                    echo "‚úÖ Script '$script_name' completed successfully."
                else
                    echo "‚ùå Script '$script_name' failed with exit code: $?"
                fi
            else
                echo "üö´ Error: '$script_name' not found in PATH or not executable."
                echo "üí° Make sure it's installed and in your PATH: which $script_name"
                echo "   Or make it executable: chmod +x $script_name && sudo mv $script_name /usr/local/bin/"
            fi
            
            # Pause unless: script succeeded AND exit_immediately is "true"
            if ! { [[ "$script_succeeded" == "true" ]] && [[ "${exit_immediately:-true}" == "true" ]]; }; then
                read -p "Press Enter to continue..."
            fi
            ;;

        "4")
            echo
            echo "Git commit / push to GitHub..."
            echo "----------------------------------------"
            script_name="release-gh-push.sh"
            exit_immediately=true
        
            if command -v "$script_name" &> /dev/null; then
                sleep 1
                if "$script_name"; then
                    echo "‚úÖ Script '$script_name' completed successfully."
                else
                    echo "‚ùå Script '$script_name' failed with exit code: $?"
                fi
            else
                echo "üö´ Error: '$script_name' not found in PATH or not executable."
                echo "üí° Make sure it's installed and in your PATH: which $script_name"
                echo "   Or make it executable: chmod +x $script_name && sudo mv $script_name /usr/local/bin/"
            fi
            
            # Pause unless: script succeeded AND exit_immediately is "true"
            if ! { [[ "$script_succeeded" == "true" ]] && [[ "${exit_immediately:-true}" == "true" ]]; }; then
                read -p "Press Enter to continue..."
            fi
            ;;

          *)
            echo
            echo "Invalid option: '$choice'. Please select a valid number or 'Q' to quit."
            read -p "Press Enter to continue..."
            ;;
            
    esac
  
done


























